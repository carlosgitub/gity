<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:jpa="http://aries.apache.org/xmlns/jpa/v1.1.0"
           xmlns:tx="http://aries.apache.org/xmlns/transactions/v1.1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <!-- TM -->

    <!-- plain javax.transaction.TransactionManager is not enough to do recovery for ActiveMQ -->
    <reference id="jtaTxManager" interface="org.apache.geronimo.transaction.manager.RecoverableTransactionManager" />
    <!-- aries-transaction-manager registers this interface if it finds the org.springframework.transaction.PlatformTransactionManager class  -->
    <reference id="springJtaTxManager" interface="org.springframework.transaction.PlatformTransactionManager" />

    <!-- ActiveMQ -->

    <!-- XA connection factory -->
    <bean id="activeMqXaConnectionFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616" />
        <property name="userName" value="admin" />
        <property name="password" value="admin" />
        <property name="redeliveryPolicy">
            <bean class="org.apache.activemq.RedeliveryPolicy">
                <property name="maximumRedeliveries" value="0" />
            </bean>
        </property>
    </bean>
    <!-- non-XA connection factory -->
    <bean id="activeMqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616" />
        <property name="userName" value="admin" />
        <property name="password" value="admin" />
        <property name="redeliveryPolicy">
            <bean class="org.apache.activemq.RedeliveryPolicy">
                <property name="maximumRedeliveries" value="0" />
            </bean>
        </property>
    </bean>

    <!-- XA pool - ensures that the JMS Sessions get enlisted in the global transaction manager -->
    <bean id="jmsXaPoolConnectionFactory" class="org.apache.activemq.pool.JcaPooledConnectionFactory">
        <property name="name" value="activemq.default" />
        <property name="maxConnections" value="1" />
        <property name="transactionManager" ref="jtaTxManager" />
        <property name="connectionFactory" ref="activeMqXaConnectionFactory" />
    </bean>
    <!-- non-XA pool -->
    <bean id="jmsPoolConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="maxConnections" value="1" />
        <property name="connectionFactory" ref="activeMqConnectionFactory" />
    </bean>

    <!-- wires ActiveMQ broker and Geronimo transaction manager -->
    <!--
        A ResourceManager is needed for every transactional resource in order to
        recover any outstanding transactions after a crash.
        It will register with the Aries transaction manager, which then calls
        recoverResource() on the transactional resource itself.
    -->
    <bean id="resourceManager" class="org.apache.activemq.jms.pool.GenericResourceManager" init-method="recoverResource">
        <property name="transactionManager" ref="jtaTxManager" />
        <property name="connectionFactory" ref="jmsXaPoolConnectionFactory" />
        <property name="resourceName" value="activemq.default" />
        <property name="userName" value="admin" />
        <property name="password" value="admin" />
    </bean>

    <!-- Camel -->

    <!-- ActiveMQ JMS Configuration is defined as Transacted and use global JTA TxManager -->
    <bean id="amq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration">
            <bean class="org.apache.camel.component.jms.JmsConfiguration">
                <property name="connectionFactory" ref="jmsXaPoolConnectionFactory" />
                <!-- JTA transaction manager (Spring interface to Aries-TM): -->
                <property name="transactionManager" ref="springJtaTxManager" />
                <!-- We set local transactions to false, because the JtaTransactionManager will take care of enrolling the XA JMS Connection when needed. -->
                <property name="transacted" value="false" />
                <property name="cacheLevelName" value="CACHE_NONE" />
                <property name="maxConcurrentConsumers" value="1" />
            </bean>
        </property>
    </bean>


    <!-- DAOs -->
    <bean id="estadoUsuarioDao" class="ec.org.isspol.persistence.dao.security.impl.EstadoUsuarioDaoImpl"/>
    <bean id="horarioDao" class="ec.org.isspol.persistence.dao.security.impl.HorarioDaoImpl">
        <jpa:context unitname="SIISPOLWEB" property="entityManager"/>
        <tx:transaction method="*" value="Required"/>
    </bean>
    <bean id="oficinaDao" class="ec.org.isspol.persistence.dao.security.impl.OficinaDaoImpl">
        <jpa:context unitname="SIISPOLWEB" property="entityManager"/>
        <tx:transaction method="*" value="Required"/>
    </bean>
    <bean id="usuarioDao" class="ec.org.isspol.persistence.dao.security.impl.UsuarioDaoImpl">
        <jpa:context unitname="SIISPOLWEB" property="entityManager"/>
        <tx:transaction method="*" value="Required"/>
    </bean>
    <bean id="estructuraOrganizacionalDao" class="ec.org.isspol.persistence.dao.security.impl.EstructuraOrganizacionalDaoImpl"/>

    <!-- Services -->
    <bean id="usuarioSvc" class="ec.org.isspol.persistence.service.security.impl.UsuarioSvcImpl">
        <property name="usuarioDao" ref="usuarioDao"/>
    </bean>
    <!--<bean id="estadoUsuarioSvc" class="ec.org.isspol.persistence.service.security.impl.EstadoUsuarioSvcImpl">
        <property name="estadoUsuarioDao" ref="estadoUsuarioDao"/>
    </bean>-->
    <bean id="horarioSvc" class="ec.org.isspol.persistence.service.security.impl.HorarioSvcImpl">
        <property name="horarioDao" ref="horarioDao"/>
    </bean>
    <bean id="oficinaSvc" class="ec.org.isspol.persistence.service.security.impl.OficinaSvcImpl">
        <property name="oficinaDao" ref="oficinaDao"/>
    </bean>

    <service ref="usuarioSvc" interface="ec.org.isspol.persistence.service.security.UsuarioSvc"/>
    <!--<service ref="estadoUsuarioSvc" interface="ec.org.isspol.persistence.service.security.EstadoUsuarioSvc"/>-->
    <service ref="horarioSvc" interface="ec.org.isspol.persistence.service.security.HorarioSvc"/>
    <service ref="oficinaSvc" interface="ec.org.isspol.persistence.service.security.OficinaSvc"/>

</blueprint>